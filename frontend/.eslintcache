[{"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/index.js":"1","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/App.js":"2","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Home.component.js":"3","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Navbar.component.js":"4","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignIn.component.js":"5","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignUp.component.js":"6","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Navbar.component.js":"7","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Navbar.component.js":"8","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Profile.component.js":"9","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignUp.page.js":"10","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignIn.page.js":"11","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/Home.page.js":"12","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Profile.component.js":"13","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/NewJob.component.js":"14","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/context/UserContext.js":"15","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Profile.page.js":"16","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Profile.page.js":"17","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/NewJob.page.js":"18","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Dash.component.js":"19","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Search.component.js":"20","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Dash.page.js":"21","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Search.page.js":"22"},{"size":266,"mtime":1611129499941,"results":"23","hashOfConfig":"24"},{"size":2244,"mtime":1611395686199,"results":"25","hashOfConfig":"24"},{"size":2857,"mtime":1611166638672,"results":"26","hashOfConfig":"24"},{"size":680,"mtime":1610977940027,"results":"27","hashOfConfig":"24"},{"size":4362,"mtime":1611337046142,"results":"28","hashOfConfig":"24"},{"size":6984,"mtime":1611341341375,"results":"29","hashOfConfig":"24"},{"size":1192,"mtime":1611152708142,"results":"30","hashOfConfig":"24"},{"size":1186,"mtime":1611152718374,"results":"31","hashOfConfig":"24"},{"size":10762,"mtime":1611341802436,"results":"32","hashOfConfig":"24"},{"size":652,"mtime":1611222772874,"results":"33","hashOfConfig":"24"},{"size":652,"mtime":1611222789282,"results":"34","hashOfConfig":"24"},{"size":653,"mtime":1611222613692,"results":"35","hashOfConfig":"24"},{"size":6460,"mtime":1611310184125,"results":"36","hashOfConfig":"24"},{"size":9594,"mtime":1611335947639,"results":"37","hashOfConfig":"24"},{"size":73,"mtime":1611142853463,"results":"38","hashOfConfig":"24"},{"size":570,"mtime":1611223311182,"results":"39","hashOfConfig":"24"},{"size":570,"mtime":1611238998174,"results":"40","hashOfConfig":"24"},{"size":396,"mtime":1611342733045,"results":"41","hashOfConfig":"24"},{"size":9706,"mtime":1611476114297,"results":"42","hashOfConfig":"24"},{"size":10387,"mtime":1611478417636,"results":"43","hashOfConfig":"24"},{"size":388,"mtime":1611395649838,"results":"44","hashOfConfig":"24"},{"size":394,"mtime":1611395624539,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1jdjf4c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/index.js",[],["99","100"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/App.js",["101"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Home.component.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Navbar.component.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignIn.component.js",["102"],"import {useState, useContext} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignIn() {\n  const classes = useStyles();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const history = useHistory();\n\n  const {userData, setUserData } = useContext(UserContext);\n\n  const submit = async (e) => {\n    e.preventDefault()\n    const loginRes = await Axios.post(\n      \"http://localhost:5000/user/signin\",\n      {\n        email,\n        password\n      }\n    );\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user\n    });\n    console.log(loginRes.data.token)\n    localStorage.setItem(\"auth-token\", loginRes.data.token);\n    history.push(\"/\")\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root} >\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={submit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n            <span style={{color: \"white\"}}> Sign In </span>\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SignIn;\n","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignUp.component.js",["103"],"import {useState, useContext} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dropdown } from 'react-bootstrap'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      height: '100vh',\n    },\n    image: {\n      backgroundImage: 'url(http://images.unsplash.com/photo-1527192491265-7e15c55b1ed2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80)',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [utype, setUType] = useState(\"Applicant\")\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [cpassword, setCPassword] = useState();\n  const [fname, setFname] = useState()\n  const [lname, setLname] = useState()\n  const [cname, setCname] = useState()\n  const history = useHistory();\n\n  const {userData, setUserData} = useContext(UserContext);\n  \n\n  const submit = async (e) => {\n    e.preventDefault();\n    const newUser = {email, password, cpassword, utype, fname, lname, cname};\n    await Axios.post(\n      \"http://localhost:5000/user/signup\",\n      newUser\n    );\n    const loginRes = await Axios.post(\n      \"http://localhost:5000/user/signin\",\n      {\n        email,\n        password,\n      }\n    );\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user\n    });\n    localStorage.setItem(\"auth-token\", loginRes.data.token);\n    history.push(\"/\");\n  };\n\n\n  return (\n    <Grid container component=\"main\" className=\"classes.root\" style={{height:\"100vh\"}}>\n    <CssBaseline />\n    <Grid item xs={false} sm={4} md={7} className={classes.image} />\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" size=\"sm\">\n                    {utype}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item onClick={()=>{setUType('Applicant')}}>Applicant</Dropdown.Item>\n                    <Dropdown.Item onClick={()=>{setUType('Recruiter')}}>Recruiter</Dropdown.Item>\n                </Dropdown.Menu>\n        </Dropdown>\n        <form className={classes.form} onSubmit={submit}>\n          <Grid container spacing={2}>\n            {\n              (utype===\"Applicant\") ? (\n                <>\n                  <Grid item xs={12} sm={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"First Name\"\n                        onChange={(e) => setFname(e.target.value)}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        label=\"Last Name\"\n                        onChange={(e) => setLname(e.target.value)}\n                      />\n                    </Grid>\n                </>\n              ): (\n                <>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"cName\"\n                    label=\"Company Name\"\n                    onChange={(e) => setCname(e.target.value)}\n                  />\n                </Grid>\n              </>\n              )\n            }\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              \n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"cpassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"cpassword\"\n                onChange={(e) => setCPassword(e.target.value)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n          >\n          <span style={{color: \"white\"}}> Sign Up </span>\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </form>\n      </div>\n      </Grid>\n    </Grid>\n  );\n}","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Navbar.component.js",["104"],"import {useContext} from \"react\";\nimport { useHistory} from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\n\n\n\nconst Navbar = () => {\n    const { setUserData }= useContext(UserContext);\n    const history = useHistory();\n\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        })\n        localStorage.setItem(\"auth-token\", \"\");\n        history.push(\"/\")\n    }\n    \n    return (  \n        <nav className=\"navbar\">\n            <h1>Work-Way</h1>\n            <div className=\"links\">\n                <a href=\"/applicantdash\">Dashboard</a>\n                <a href=\"/search\">Search Jobs</a>\n                <a href=\"/applicantprofile\" style={{\n                    borderWidth: \"thin\",\n                    borderStyle: \"solid\",\n                    borderColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Edit Profile</a>\n                <a onClick={logout} style={{\n                    color: \"white\",\n                    backgroundColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Sign-Out</a>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Navbar.component.js",["105"],"import {useContext} from \"react\";\nimport { useHistory} from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\n\n\n\nconst Navbar = () => {\n    const { setUserData }= useContext(UserContext);\n    const history = useHistory();\n\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        })\n        localStorage.setItem(\"auth-token\", \"\");\n        history.push(\"/\")\n    }\n    return (  \n        <nav className=\"navbar\">\n            <h1>Work-Way</h1>\n            <div className=\"links\">\n                <a href=\"/recruiterdash\">Dashboard</a>\n                <a href=\"/newjob\">Create Job</a>\n                <a href=\"/recruiterprofile\" style={{\n                    borderWidth: \"thin\",\n                    borderStyle: \"solid\",\n                    borderColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Edit Profile</a>\n                <a onClick={logout} style={{\n                    color: \"white\",\n                    backgroundColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Sign-Out</a>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Profile.component.js",["106","107"],"import {useState, useContext, useEffect} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 40),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n export default  function Profile() {\n  const classes = useStyles();\n  const [ education, setEducation ] = useState([]);\n  const [ skills, setSkills ] = useState([]);\n  const [fname, setFname] = useState(\"\")\n  const [lname, setLname] = useState(\"\")\n  const [skill, setSkill] = useState(\"\")\n  const [institute, setInstitute] = useState(\"\")\n  const [syear, setSyear] = useState(\"\")\n  const [eyear, setEyear] = useState(\"\")\n  const history = useHistory();\n  \n  const {userData, setUserData } = useContext(UserContext);\n  \n  \n  useEffect( () => {\n    const callData = (async () => {\n      let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        const recruiterAll = await Axios.get(\"http://localhost:5000/user/getall\", {\n          headers: {\"x-auth-token\": token}\n        });\n        setEducation(recruiterAll.data.education)\n        setSkills(recruiterAll.data.skills)\n        setFname(recruiterAll.data.fname)\n        setLname(recruiterAll.data.lname)\n      }\n    });\n    callData();\n  }, [])\n  \n  const submit = async (e) => {\n    e.preventDefault()\n    const updatedUser = {education, fname, lname, skills};\n    let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        console.log(updatedUser)\n        await Axios.post(\"http://localhost:5000/user/update\", updatedUser, {\n          headers: {\"x-auth-token\": token}\n        }); \n      }\n    history.push(\"/\")\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.rooot} style={{height:\"100vh\"}}> \n    <Grid container className={classes.image} >\n      <CssBaseline />\n        <Grid item xs={false} sm={1} />\n        <Grid item xs={12} sm={10} md={10} component={Paper} elevation={6} square>\n            <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <PersonIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Edit Profile\n            </Typography>\n            <form className={classes.form} onSubmit={submit}>\n            <Grid container spacing={2}>\n                <h3> â¢ Basic Info</h3>\n            </Grid>\n            <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name=\"fName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fName\"\n                label=\"First Name\"\n                defaultValue={fname}\n                value={fname}\n                onChange={(e) => setFname(e.target.value)}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lName\"\n                label=\"Last Name\"\n                name=\"lName\"\n                defaultValue={lname}\n                value={lname}\n                onChange={(e) => setLname(e.target.value)}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            \n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                defaultValue={userData?.user?.email || ''}\n                value={userData?.user?.email || ''}\n                InputProps={{\n                    readOnly: true,\n                }}\n              />\n            </Grid>\n            <br />\n            &nbsp;\n            <br/>\n            <Grid container spacing={2}>\n                <h3> â¢ Education</h3>\n            </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n              {education?.map(item => {\n                return (\n                  <Grid item key={JSON.stringify(item)}>\n                    <Card>\n                      <CardContent>\n                        <h5>{item.institute}</h5>\n                        {item.syear}-{item.eyear}\n                        <IconButton onClick={() => {\n                          setEducation(education.filter(ed => (ed !== item) ))\n                        }}>\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                )\n              })}\n          </Grid>\n            <Grid item xs={12}>\n            \n            <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"institute\"\n                label=\"Institute\"\n                onChange={(e) => setInstitute(e.target.value)}\n            />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"sYear\"\n                name=\"sYear\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"sYear\"\n                label=\"Start Year\"\n                onChange={(e) => setSyear(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"eYear\"\n                label=\"End Year\"\n                name=\"eYear\"\n                onChange={(e) => setEyear(e.target.value)}\n              />\n            </Grid>\n            <Button\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n            onClick={()=>{\n              const item = {institute, syear, eyear}\n              if (!education.filter(ed => JSON.stringify(ed) === JSON.stringify(item)).length && institute !== \"\" && syear != \"\")\n                setEducation([...education, item])\n            }}\n          >\n          <span style={{color: \"white\"}}> Add Education </span>\n          </Button>\n          </Grid>\n          <br />\n          &nbsp;\n          <br/>\n          <Grid container spacing={2}>\n                <h3> â¢ Skills</h3>\n          </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n              {skills?.map(item => {\n                return (\n                  <Grid item key={item}>\n                    <Card>\n                      <CardContent>\n                        {item}\n                        <IconButton onClick={() => {\n                          setSkills(skills.filter(sk => sk !== item))\n                        }}>\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                )\n              })}\n          </Grid>\n          &nbsp;\n          <Grid item xs={12}>\n              <Autocomplete\n                freeSolo\n                name=\"skill\"\n                variant=\"outlined\"\n                fullWidth\n                options={[{title: \"Java\"}, {title: \"C++\"}, {title: \"Python\"},]}\n                getOptionLabel={(option) => option.title}\n                label=\"Skill\" \n                inputValue={skill|| ''}\n                onInputChange={(event, value)=>{\n                  setSkill(value)\n                }} \n                renderInput={(params) => <TextField {...params} label=\"Enter new skill\" variant=\"outlined\" />}\n              />\n            </Grid>\n          <Grid item xs={12}>\n          \n            <Button\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n            onClick={()=>{\n              if (!skills.filter(sk => sk === skill).length && skill !== \"\")\n                setSkills([...skills, skill])\n            }}\n          >\n          <span style={{color: \"white\"}}> Add Skills </span>\n          </Button>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"secondary\"\n          >\n          <span style={{color: \"white\"}}> Save </span>\n          </Button>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </form>\n            </div>\n            </Grid>\n            <Grid item xs={false} sm={1} md={7}/>\n    </Grid>\n    </Grid> \n  );\n}\n","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignUp.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignIn.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/Home.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Profile.component.js",["108","109"],"import {useState, useContext, useEffect} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 40),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n export default  function Profile() {\n  const classes = useStyles();\n  const [cname, setCname] = useState()\n  const [bio, setBio] = useState()\n  const [phone, setPhone] = useState()\n  const history = useHistory()\n\n  const {userData, setUserData } = useContext(UserContext);\n\n  useEffect( () => {\n    const callData = (async () => {\n      let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        const recruiterAll = await Axios.get(\"http://localhost:5000/user/getall\", {\n          headers: {\"x-auth-token\": token}\n        });\n        setCname(recruiterAll.data.cname)\n        setBio(recruiterAll.data.bio)\n        setPhone(recruiterAll.data.phone)\n      }\n    });\n    callData()\n    console.log(userData)\n\t}, [])\n\n  const submit = async (e) => {\n    e.preventDefault()\n    const updatedUser = {cname, phone, bio};\n    let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        console.log(updatedUser)\n        await Axios.post(\"http://localhost:5000/user/update\", updatedUser, {\n          headers: {\"x-auth-token\": token}\n        }); \n      }\n    history.push(\"/\")\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.rooot} style={{height:\"100vh\"}}> \n    <Grid container className={classes.image} >\n      <CssBaseline />\n        <Grid item xs={false} sm={1} />\n        <Grid item xs={12} sm={10} md={10} component={Paper} elevation={6} square style={{height:\"100vh\"}}>\n            <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <PersonIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Edit Profile\n            </Typography>\n            <form className={classes.form} onSubmit={submit}>\n            <Grid container spacing={2}>\n                <h3> â¢ Basic Info</h3>\n            </Grid>\n            <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"cName\"\n                label=\"Company Name\"\n                defaultValue={cname}\n                value={cname}\n                onChange={(e) => setCname(e.target.value)}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            \n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                value={userData?.user?.email}\n                InputProps={{\n                    readOnly: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            \n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                type=\"number\"\n                id=\"phone\"\n                label=\"Phone\"\n                defaultValue={phone}\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <br />\n            &nbsp;\n            <br/>\n            <Grid container spacing={2}>\n                <h3> â¢ Bio</h3>\n            </Grid>\n            <Grid item xs={12}>\n            \n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"bio\"\n                label=\"Tell us more (max 250 words)\"\n                defaultValue={bio}\n                value={bio}\n                onChange={(e) => setBio(e.target.value)}\n                InputLabelProps={{ shrink: true }}\n            />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n          >\n          <span style={{color: \"white\"}}> Save </span>\n          </Button>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </form>\n            </div>\n            </Grid>\n            <Grid item xs={false} sm={1} md={7}/>\n    </Grid>\n    </Grid> \n  );\n}","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/NewJob.component.js",["110","111"],"import {useState, useContext} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 40),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n export default  function Profile() {\n  const classes = useStyles();\n  const [ skills, setSkills ] = useState([]);\n  const [title, setTitle] = useState()\n  const [skill, setSkill] = useState(\"\")\n  const [salary, setSalary] = useState()\n  const [maxapp, setMaxapp] = useState()\n  const [maxpos, setMaxpos] = useState()\n  const [jtype, setJtype] = useState()\n  const [duration, setDuration] = useState()\n  const [dod, setDod] = useState()\n  const history = useHistory();\n  \n  const {userData, setUserData } = useContext(UserContext);\n\n  const jobTypes = [\"Full-Time\",\"Part-Time\", \"Work from Home\"]\n  const durTypes = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]\n\n  const submit = async (e) => {\n    e.preventDefault()\n    var dop = new Date()\n    const newJob = {title, skills, salary, maxapp, maxpos, jtype, duration, dod, dop};\n    let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        await Axios.post(\"http://localhost:5000/job/add\", newJob, {\n          headers: {\"x-auth-token\": token}\n        }); \n      }\n    history.push(\"/\")\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.rooot} style={{height:\"100vh\"}}> \n    <Grid container className={classes.image} >\n      <CssBaseline />\n        <Grid item xs={false} sm={1} />\n        <Grid item xs={12} sm={10} md={10} component={Paper} elevation={6} square>\n            <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <CreateIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Create Job\n            </Typography>\n            <form className={classes.form} onSubmit={submit}>\n            <Grid container spacing={2}>\n                <h3> â¢ Basic Info</h3>\n            </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"title\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"title\"\n                label=\"Job Title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Autocomplete\n              id=\"jtype\"\n              options={jobTypes}\n              getOptionLabel={(option) => option}\n              style={{ width: \"100%\" }}\n              renderInput={(params) => <TextField {...params} required label=\"Job Type\" variant=\"outlined\" />}\n              onInputChange={(event, value)=>{\n                  setJtype(value)\n              }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              fullWidth\n              id=\"date\"\n              variant=\"outlined\"\n              label=\"Deadline\"\n              type=\"date\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => setDod(e.target.value)}\n            />\n            </Grid>\n          \n          </Grid>\n          <br />\n          &nbsp;\n          <br/>\n          <Grid container spacing={2}>\n                <h3> â¢ Other Info</h3>\n          </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <TextField\n                  name=\"title\"\n                  variant=\"outlined\"\n                  required\n                  type=\"number\"\n                  fullWidth\n                  id=\"title\"\n                  label=\"Salary\"\n                  onChange={(e) => setSalary(e.target.value)}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                id=\"jtype\"\n                options={durTypes}\n                getOptionLabel={(option) => option}\n                style={{ width: \"100%\" }}\n                renderInput={(params) => <TextField {...params} required label=\"Duration\" variant=\"outlined\" />}\n                onInputChange={(event, value)=>{\n                  setDuration(value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  name=\"maxapp\"\n                  variant=\"outlined\"\n                  type=\"number\"\n                  fullWidth\n                  id=\"maxapp\"\n                  label=\"Max Applicants\"\n                  onChange={(e) => setMaxapp(e.target.value)}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  type=\"number\"\n                  fullWidth\n                  id=\"maxpos\"\n                  label=\"Max Positions\"\n                  name=\"maxpos\"\n                  onChange={(e) => setMaxpos(e.target.value)}\n                />\n            </Grid>\n          </Grid>\n          <br />\n          &nbsp;\n          <br/>\n          <Grid container spacing={2}>\n                <h3> â¢ Required Skills</h3>\n          </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n              {skills?.map(item => {\n                return (\n                  <Grid item key={item}>\n                    <Card>\n                      <CardContent>\n                        {item}\n                        <IconButton onClick={() => {\n                          setSkills(skills.filter(sk => sk !== item))\n                        }}>\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                )\n              })}\n          </Grid>\n          &nbsp;\n          <Grid item xs={12}>\n              <Autocomplete\n                freeSolo\n                name=\"skill\"\n                variant=\"outlined\"\n                fullWidth\n                options={[{title: \"Java\"}, {title: \"C++\"}, {title: \"Python\"},]}\n                getOptionLabel={(option) => option.title}\n                label=\"Skill\" \n                inputValue={skill|| ''}\n                onInputChange={(event, value)=>{\n                  setSkill(value)\n                }} \n                renderInput={(params) => <TextField {...params} label=\"Enter new skill\" variant=\"outlined\" />}\n              />\n            </Grid>\n          <Grid item xs={12}>\n          \n            <Button\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n            onClick={()=>{\n              if (!skills.filter(sk => sk === skill).length && skill !== \"\")\n                setSkills([...skills, skill])\n            }}\n          >\n          <span style={{color: \"white\"}}> Add Skills </span>\n          </Button>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"secondary\"\n          >\n          <span style={{color: \"white\"}}> Save </span>\n          </Button>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </form>\n            </div>\n            </Grid>\n            <Grid item xs={false} sm={1} md={7}/>\n    </Grid>\n    </Grid> \n  );\n}\n","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/context/UserContext.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Profile.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Profile.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/NewJob.page.js",["112","113","114","115"],"import Profile from '../recruiter/NewJob.component'\nimport Navbar from '../recruiter/Navbar.component'\nimport { useContext, useEffect } from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\n\nexport default function ProfilePage() {\n  return (\n    <div className=\"RecruiterProfile\">\n        <Navbar />\n        <Profile />\n    </div>\n  );\n}","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Dash.component.js",["116","117","118","119"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Search.component.js",["120","121"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Dash.page.js",["122","123","124","125"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Search.page.js",["126","127","128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":34,"column":34,"nodeType":"136","endLine":37,"endColumn":12},{"ruleId":"137","severity":1,"message":"138","line":67,"column":10,"nodeType":"139","messageId":"140","endLine":67,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":73,"column":10,"nodeType":"139","messageId":"140","endLine":73,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":32,"column":17,"nodeType":"143","endLine":36,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":31,"column":17,"nodeType":"143","endLine":35,"endColumn":20},{"ruleId":"137","severity":1,"message":"144","line":79,"column":20,"nodeType":"139","messageId":"140","endLine":79,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":242,"column":124,"nodeType":"147","messageId":"148","endLine":242,"endColumn":126},{"ruleId":"137","severity":1,"message":"144","line":68,"column":20,"nodeType":"139","messageId":"140","endLine":68,"endColumn":31},{"ruleId":"134","severity":1,"message":"149","line":87,"column":5,"nodeType":"150","endLine":87,"endColumn":7,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"138","line":80,"column":10,"nodeType":"139","messageId":"140","endLine":80,"endColumn":18},{"ruleId":"137","severity":1,"message":"144","line":80,"column":20,"nodeType":"139","messageId":"140","endLine":80,"endColumn":31},{"ruleId":"137","severity":1,"message":"152","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":20},{"ruleId":"137","severity":1,"message":"153","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":31},{"ruleId":"137","severity":1,"message":"154","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":19},{"ruleId":"137","severity":1,"message":"155","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":20},{"ruleId":"137","severity":1,"message":"144","line":76,"column":20,"nodeType":"139","messageId":"140","endLine":76,"endColumn":31},{"ruleId":"134","severity":1,"message":"149","line":128,"column":6,"nodeType":"150","endLine":128,"endColumn":8,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"142","line":189,"column":27,"nodeType":"143","endLine":193,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":197,"column":27,"nodeType":"143","endLine":201,"endColumn":30},{"ruleId":"137","severity":1,"message":"157","line":21,"column":8,"nodeType":"139","messageId":"140","endLine":21,"endColumn":14},{"ruleId":"134","severity":1,"message":"149","line":121,"column":6,"nodeType":"150","endLine":121,"endColumn":8,"suggestions":"158"},{"ruleId":"137","severity":1,"message":"152","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":20},{"ruleId":"137","severity":1,"message":"153","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":31},{"ruleId":"137","severity":1,"message":"154","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":19},{"ruleId":"137","severity":1,"message":"155","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":20},{"ruleId":"137","severity":1,"message":"152","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":20},{"ruleId":"137","severity":1,"message":"153","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":31},{"ruleId":"137","severity":1,"message":"154","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":19},{"ruleId":"137","severity":1,"message":"155","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":20},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","Assignments to the 'userData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setUserData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'UserContext' is defined but never used.","'useHistory' is defined but never used.",["162"],"'Rating' is defined but never used.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"164","fix":"166"},{"desc":"164","fix":"167"},"Update the dependencies array to be: [userData]",{"range":"168","text":"169"},{"range":"170","text":"169"},{"range":"171","text":"169"},[2782,2784],"[userData]",[4314,4316],[4003,4005]]