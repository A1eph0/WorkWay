[{"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/index.js":"1","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/App.js":"2","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Home.component.js":"3","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Navbar.component.js":"4","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignIn.component.js":"5","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignUp.component.js":"6","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Navbar.component.js":"7","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Navbar.component.js":"8","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Profile.component.js":"9","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignUp.page.js":"10","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignIn.page.js":"11","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/Home.page.js":"12","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Profile.component.js":"13","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/NewJob.component.js":"14","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/context/UserContext.js":"15","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Profile.page.js":"16","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Profile.page.js":"17","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/NewJob.page.js":"18","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Dash.component.js":"19","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Search.component.js":"20","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Dash.page.js":"21","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Search.page.js":"22","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Dash.page.js":"23","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Dash.component.js":"24","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Emp.page.js":"25","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Emp.component.js":"26"},{"size":266,"mtime":1611129499941,"results":"27","hashOfConfig":"28"},{"size":2453,"mtime":1611663903151,"results":"29","hashOfConfig":"28"},{"size":2857,"mtime":1611166638672,"results":"30","hashOfConfig":"28"},{"size":680,"mtime":1610977940027,"results":"31","hashOfConfig":"28"},{"size":4982,"mtime":1611661878243,"results":"32","hashOfConfig":"28"},{"size":7608,"mtime":1611676017060,"results":"33","hashOfConfig":"28"},{"size":1192,"mtime":1611663983836,"results":"34","hashOfConfig":"28"},{"size":1236,"mtime":1611666942857,"results":"35","hashOfConfig":"28"},{"size":11951,"mtime":1611664636473,"results":"36","hashOfConfig":"28"},{"size":652,"mtime":1611222772874,"results":"37","hashOfConfig":"28"},{"size":652,"mtime":1611222789282,"results":"38","hashOfConfig":"28"},{"size":653,"mtime":1611222613692,"results":"39","hashOfConfig":"28"},{"size":7127,"mtime":1611671716751,"results":"40","hashOfConfig":"28"},{"size":10435,"mtime":1611667189355,"results":"41","hashOfConfig":"28"},{"size":73,"mtime":1611142853463,"results":"42","hashOfConfig":"28"},{"size":570,"mtime":1611659917426,"results":"43","hashOfConfig":"28"},{"size":570,"mtime":1611238998174,"results":"44","hashOfConfig":"28"},{"size":396,"mtime":1611342733045,"results":"45","hashOfConfig":"28"},{"size":10370,"mtime":1611672299286,"results":"46","hashOfConfig":"28"},{"size":21544,"mtime":1611671630650,"results":"47","hashOfConfig":"28"},{"size":388,"mtime":1611395649838,"results":"48","hashOfConfig":"28"},{"size":394,"mtime":1611395624539,"results":"49","hashOfConfig":"28"},{"size":242,"mtime":1611483446509,"results":"50","hashOfConfig":"28"},{"size":27091,"mtime":1611679269614,"results":"51","hashOfConfig":"28"},{"size":233,"mtime":1611551747660,"results":"52","hashOfConfig":"28"},{"size":13928,"mtime":1611667728616,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1jdjf4c",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/index.js",[],["117","118"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/App.js",["119"],"import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport UserContext from './context/UserContext'\nimport Home from './components/misc-pages/Home.page'\nimport SignIn from './components/misc-pages/SignIn.page'\nimport SignUp from './components/misc-pages/SignUp.page'\nimport A_Profile from './components/a-pages/Profile.page'\nimport R_Profile from './components/r-pages/Profile.page'\nimport NewJob from './components/r-pages/NewJob.page'\nimport Search from './components/a-pages/Search.page'\nimport A_Dash from './components/a-pages/Dash.page'\nimport R_Dash from './components/r-pages/Dash.page'\nimport Emp from './components/r-pages/Emp.page'\n\nexport default function App() {\n  let [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  })\n  \n  useEffect(() => {\n      const checkLoggedIn = async () => {\n        let token = await localStorage.getItem(\"auth-token\")\n        if (token === null) {\n          localStorage.setItem(\"auth-token\", \"\");\n          token = \"\";\n        }\n        const tokenRes = await Axios.post(\n            \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n        );\n        if (tokenRes.data) {\n          const userRes = await Axios.get(\"http://localhost:5000/user/\", {\n            headers: {\"x-auth-token\": token}\n          });\n          setUserData(userData = {\n            token: token,\n            user: userRes.data\n          });\n        }\n        console.log(\"eaeiheihifuiahfudhfia\", userData)\n      };\n      checkLoggedIn();\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Router >\n        <UserContext.Provider value={{userData, setUserData}}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/applicantprofile\" component={A_Profile}/>\n          <Route path=\"/recruiterprofile\" component={R_Profile}/>\n          <Route path=\"/newjob\" component={NewJob}/>\n          <Route path=\"/applicantdash\" component={A_Dash}/>\n          <Route path=\"/recruiterdash\" component={R_Dash}/>\n          <Route path=\"/search\" component={Search}/>\n          <Route path=\"/myemp\" component={Emp}/>\n        </UserContext.Provider>\n      </Router>\n    </div>\n//     <div className=\"App\">\n//       <Navbar />\n//       <Profile />\n//     </div>\n  );\n}\n\n","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Home.component.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/Navbar.component.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignIn.component.js",["120"],"import {useState, useContext} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignIn() {\n  const classes = useStyles();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const history = useHistory();\n\n  const {userData, setUserData } = useContext(UserContext);\n  const [open, setOpen] = useState(false)\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  \n\n  const submit = async (e) => {\n    e.preventDefault()\n    try{\n    const loginRes = await Axios.post(\n      \"http://localhost:5000/user/signin\",\n      {\n        email,\n        password\n      }\n    );\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user\n    });\n    console.log(loginRes.data.token)\n    localStorage.setItem(\"auth-token\", loginRes.data.token);\n    history.push(\"/\")\n    }\n    catch(err){\n      setOpen(true)\n    }\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root} >\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={submit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n            <span style={{color: \"white\"}}> Sign In </span>\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Invalid Login Credentials!\n        </Alert>\n      </Snackbar>\n    </Grid>\n  );\n}\n\nexport default SignIn;\n","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc/SignUp.component.js",["121"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Navbar.component.js",["122"],"import {useContext} from \"react\";\nimport { useHistory} from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\n\n\n\nconst Navbar = () => {\n    const { setUserData }= useContext(UserContext);\n    const history = useHistory();\n\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        })\n        localStorage.setItem(\"auth-token\", \"\");\n        history.push(\"/\")\n    }\n    \n    return (  \n        <nav className=\"navbar\">\n            <h1>Work-Way</h1>\n            <div className=\"links\">\n                <a href=\"/applicantdash\">Dashboard</a>\n                <a href=\"/search\">Search Jobs</a>\n                <a href=\"/applicantprofile\" style={{\n                    borderWidth: \"thin\",\n                    borderStyle: \"solid\",\n                    borderColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Edit Profile</a>\n                <a onClick={logout} style={{\n                    color: \"white\",\n                    backgroundColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Sign-Out</a>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Navbar.component.js",["123"],"import {useContext} from \"react\";\nimport { useHistory} from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\n\n\n\nconst Navbar = () => {\n    const { setUserData }= useContext(UserContext);\n    const history = useHistory();\n\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        })\n        localStorage.setItem(\"auth-token\", \"\");\n        history.push(\"/\")\n    }\n    return (  \n        <nav className=\"navbar\">\n            <h1>Work-Way</h1>\n            <div className=\"links\">\n                <a href=\"/recruiterdash\">Dashboard</a>\n                <a href=\"/myemp\">My Employees</a>\n                <a href=\"/newjob\">Create Job</a>\n                <a href=\"/recruiterprofile\" style={{\n                    borderWidth: \"thin\",\n                    borderStyle: \"solid\",\n                    borderColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Edit Profile</a>\n                <a onClick={logout} style={{\n                    color: \"white\",\n                    backgroundColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>Sign-Out</a>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Profile.component.js",["124","125","126","127"],"import {useState, useContext, useEffect} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 40),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n export default  function Profile() {\n  const classes = useStyles();\n  const [ education, setEducation ] = useState([]);\n  const [ skills, setSkills ] = useState([]);\n  const [fname, setFname] = useState(\"\")\n  const [lname, setLname] = useState(\"\")\n  const [skill, setSkill] = useState(\"\")\n  const [institute, setInstitute] = useState(\"\")\n  const [syear, setSyear] = useState(\"\")\n  const [eyear, setEyear] = useState(\"\")\n  const history = useHistory();\n  const [rating, setRating] = useState()\n  const [open, setOpen] = useState(false)\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  \n  \n  const {userData, setUserData } = useContext(UserContext);\n  \n  \n  useEffect( () => {\n    const callData = (async () => {\n      let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        const recruiterAll = await Axios.get(\"http://localhost:5000/user/getall\", {\n          headers: {\"x-auth-token\": token}\n        });\n        setEducation(recruiterAll.data.education)\n        setSkills(recruiterAll.data.skills)\n        setFname(recruiterAll.data.fname)\n        setLname(recruiterAll.data.lname)\n        if (Number(recruiterAll.data.nrating)){\n          setRating(recruiterAll.data.trating/recruiterAll.data.nrating)\n        }\n        else{\n          setRating(0)\n        }\n      }\n    });\n    callData();\n  }, [])\n  \n  const submit = async (e) => {\n    e.preventDefault()\n    const updatedUser = {education, fname, lname, skills};\n    let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        console.log(updatedUser)\n        await Axios.post(\"http://localhost:5000/user/update\", updatedUser, {\n          headers: {\"x-auth-token\": token}\n        }); \n      }\n    history.push(\"/\")\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.rooot} style={{height:\"100vh\"}}> \n    <Grid container className={classes.image} >\n      <CssBaseline />\n        <Grid item xs={false} sm={1} />\n        <Grid item xs={12} sm={10} md={10} component={Paper} elevation={6} square>\n            <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <PersonIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Edit Profile\n            </Typography>\n            <form className={classes.form} onSubmit={submit}>\n            <Grid container spacing={2}>\n                <h3> • Basic Info</h3>\n            </Grid>\n            <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name=\"fName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"fName\"\n                label=\"First Name\"\n                defaultValue={fname}\n                value={fname}\n                onChange={(e) => setFname(e.target.value)}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lName\"\n                label=\"Last Name\"\n                name=\"lName\"\n                defaultValue={lname}\n                value={lname}\n                onChange={(e) => setLname(e.target.value)}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            \n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                defaultValue={userData?.user?.email || ''}\n                value={userData?.user?.email || ''}\n                InputProps={{\n                    readOnly: true,\n                }}\n              />\n            </Grid>\n            <br />\n          &nbsp;\n          <br/>\n          <Grid container spacing={2}>\n                <h3> • Rating: &nbsp; &nbsp; &nbsp;{rating} ★</h3>\n          </Grid>\n          &nbsp;\n            <br />\n            &nbsp;\n            <br/>\n            <Grid container spacing={2}>\n                <h3> • Education</h3>\n            </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n              {education?.map(item => {\n                let eyear=\"Present\"\n                if (item.eyear!=\"\") eyear=item.eyear\n                return (\n                  <Grid item key={JSON.stringify(item)}>\n                    <Card>\n                      <CardContent>\n                        <h5>{item.institute}</h5>\n                        {item.syear}-{eyear}\n                        <IconButton onClick={() => {\n                          setEducation(education.filter(ed => (ed !== item) ))\n                        }}>\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                )\n              })}\n          </Grid>\n            <Grid item xs={12}>\n            \n            <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"institute\"\n                label=\"Institute\"\n                onChange={(e) => setInstitute(e.target.value)}\n            />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"sYear\"\n                name=\"sYear\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"sYear\"\n                label=\"Start Year\"\n                onChange={(e) => setSyear(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"eYear\"\n                label=\"End Year\"\n                name=\"eYear\"\n                onChange={(e) => setEyear(e.target.value)}\n              />\n            </Grid>\n            <Button\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n            onClick={()=>{\n              const item = {institute, syear, eyear}\n              if (syear<0 || (eyear!= \"\" && syear>eyear))\n              {\n                setOpen(true)\n              }\n              else if (!education.filter(ed => JSON.stringify(ed) === JSON.stringify(item)).length && institute !== \"\" && syear != \"\")\n                setEducation([...education, item])\n            }}\n          >\n          <span style={{color: \"white\"}}> Add Education </span>\n          </Button>\n          </Grid>\n          <br />\n          &nbsp;\n          <br/>\n          <Grid container spacing={2}>\n                <h3> • Skills</h3>\n          </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n              {skills?.map(item => {\n                return (\n                  <Grid item key={item}>\n                    <Card>\n                      <CardContent>\n                        {item}\n                        <IconButton onClick={() => {\n                          setSkills(skills.filter(sk => sk !== item))\n                        }}>\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                )\n              })}\n          </Grid>\n          &nbsp;\n          <Grid item xs={12}>\n              <Autocomplete\n                freeSolo\n                name=\"skill\"\n                variant=\"outlined\"\n                fullWidth\n                options={[{title: \"Java\"}, {title: \"C++\"}, {title: \"Python\"},]}\n                getOptionLabel={(option) => option.title}\n                label=\"Skill\" \n                inputValue={skill|| ''}\n                onInputChange={(event, value)=>{\n                  setSkill(value)\n                }} \n                renderInput={(params) => <TextField {...params} label=\"Enter new skill\" variant=\"outlined\" />}\n              />\n            </Grid>\n          <Grid item xs={12}>\n          \n            <Button\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n            onClick={()=>{\n              if (!skills.filter(sk => sk === skill).length && skill !== \"\")\n                setSkills([...skills, skill])\n            }}\n          >\n          <span style={{color: \"white\"}}> Add Skills </span>\n          </Button>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"secondary\"\n          >\n          <span style={{color: \"white\"}}> Save </span>\n          </Button>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </form>\n            </div>\n            </Grid>\n            <Grid item xs={false} sm={1} md={7}/>\n    </Grid>\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please Check Values Entered!\n        </Alert>\n      </Snackbar>\n    </Grid> \n  );\n}\n","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignUp.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/SignIn.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/misc-pages/Home.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Profile.component.js",["128","129"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/NewJob.component.js",["130","131"],"import {useState, useContext} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 40),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n export default  function Profile() {\n  const classes = useStyles();\n  const [ skills, setSkills ] = useState([]);\n  const [title, setTitle] = useState()\n  const [skill, setSkill] = useState(\"\")\n  const [salary, setSalary] = useState()\n  const [maxapp, setMaxapp] = useState()\n  const [maxpos, setMaxpos] = useState()\n  const [jtype, setJtype] = useState()\n  const [duration, setDuration] = useState()\n  const [dod, setDod] = useState()\n  const history = useHistory();\n  const [open, setOpen] = useState(false)\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  \n  \n  \n  const {userData, setUserData } = useContext(UserContext);\n\n  const jobTypes = [\"Full-Time\",\"Part-Time\", \"Work from Home\"]\n  const durTypes = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]\n\n  const submit = async (e) => {\n    e.preventDefault()\n    console.log(\"dod\", dod, \"New\", new Date().toDateString())\n    if(Number(salary) < 0 || Number(maxpos) <= 0 || Number(maxapp) <= 0 || Number(maxapp) < Number(maxpos) || dod < new Date().toISOString()){\n      setOpen(true)\n    }\n    else{\n    var dop = new Date()\n    const newJob = {title, skills, salary, maxapp, maxpos, jtype, duration, dod, dop};\n    let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n          \"http://localhost:5000/user/tokenIsValid\", null , {headers: {\"x-auth-token\": token}}\n      );\n      if (tokenRes.data) {\n        await Axios.post(\"http://localhost:5000/job/add\", newJob, {\n          headers: {\"x-auth-token\": token}\n        }); \n      }\n    history.push(\"/\")\n  }}\n\n  return (\n    <Grid container component=\"main\" className={classes.rooot} style={{height:\"100vh\"}}> \n    <Grid container className={classes.image} >\n      <CssBaseline />\n        <Grid item xs={false} sm={1} />\n        <Grid item xs={12} sm={10} md={10} component={Paper} elevation={6} square>\n            <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <CreateIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Create Job\n            </Typography>\n            <form className={classes.form} onSubmit={submit}>\n            <Grid container spacing={2}>\n                <h3> • Basic Info</h3>\n            </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"title\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"title\"\n                label=\"Job Title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Autocomplete\n              id=\"jtype\"\n              options={jobTypes}\n              getOptionLabel={(option) => option}\n              style={{ width: \"100%\" }}\n              renderInput={(params) => <TextField {...params} required label=\"Job Type\" variant=\"outlined\" />}\n              onInputChange={(event, value)=>{\n                  setJtype(value)\n              }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              id=\"date\"\n              variant=\"outlined\"\n              label=\"Deadline\"\n              type=\"datetime-local\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => setDod(e.target.value)}\n            />\n            </Grid>\n          \n          </Grid>\n          <br />\n          &nbsp;\n          <br/>\n          <Grid container spacing={2}>\n                <h3> • Other Info</h3>\n          </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <TextField\n                  name=\"title\"\n                  variant=\"outlined\"\n                  required\n                  type=\"number\"\n                  fullWidth\n                  id=\"title\"\n                  label=\"Salary\"\n                  onChange={(e) => setSalary(e.target.value)}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Autocomplete\n                id=\"jtype\"\n                options={durTypes}\n                getOptionLabel={(option) => option}\n                style={{ width: \"100%\" }}\n                renderInput={(params) => <TextField {...params} required label=\"Duration\" variant=\"outlined\" />}\n                onInputChange={(event, value)=>{\n                  setDuration(value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  name=\"maxapp\"\n                  variant=\"outlined\"\n                  type=\"number\"\n                  fullWidth\n                  id=\"maxapp\"\n                  label=\"Max Applicants\"\n                  onChange={(e) => setMaxapp(e.target.value)}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  type=\"number\"\n                  fullWidth\n                  id=\"maxpos\"\n                  label=\"Max Positions\"\n                  name=\"maxpos\"\n                  onChange={(e) => setMaxpos(e.target.value)}\n                />\n            </Grid>\n          </Grid>\n          <br />\n          &nbsp;\n          <br/>\n          <Grid container spacing={2}>\n                <h3> • Required Skills</h3>\n          </Grid>\n          &nbsp;\n          <Grid container spacing={2}>\n              {skills?.map(item => {\n                return (\n                  <Grid item key={item}>\n                    <Card>\n                      <CardContent>\n                        {item}\n                        <IconButton onClick={() => {\n                          setSkills(skills.filter(sk => sk !== item))\n                        }}>\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                )\n              })}\n          </Grid>\n          &nbsp;\n          <Grid item xs={12}>\n              <Autocomplete\n                freeSolo\n                name=\"skill\"\n                variant=\"outlined\"\n                fullWidth\n                options={[{title: \"Java\"}, {title: \"C++\"}, {title: \"Python\"},]}\n                getOptionLabel={(option) => option.title}\n                label=\"Skill\" \n                inputValue={skill|| ''}\n                onInputChange={(event, value)=>{\n                  setSkill(value)\n                }} \n                renderInput={(params) => <TextField {...params} label=\"Enter new skill\" variant=\"outlined\" />}\n              />\n            </Grid>\n          <Grid item xs={12}>\n          \n            <Button\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"primary\"\n            onClick={()=>{\n              if (!skills.filter(sk => sk === skill).length && skill !== \"\")\n                setSkills([...skills, skill])\n            }}\n          >\n          <span style={{color: \"white\"}}> Add Skills </span>\n          </Button>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            color=\"secondary\"\n          >\n          <span style={{color: \"white\"}}> Save </span>\n          </Button>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </form>\n            </div>\n            </Grid>\n            <Grid item xs={false} sm={1} md={7}/>\n    </Grid>\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please Check Values Entered!\n        </Alert>\n      </Snackbar>\n    </Grid> \n  );\n}\n","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/context/UserContext.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Profile.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Profile.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/NewJob.page.js",["132","133","134","135"],"import Profile from '../recruiter/NewJob.component'\nimport Navbar from '../recruiter/Navbar.component'\nimport { useContext, useEffect } from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\n\nexport default function ProfilePage() {\n  return (\n    <div className=\"RecruiterProfile\">\n        <Navbar />\n        <Profile />\n    </div>\n  );\n}","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Dash.component.js",["136","137","138","139"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/applicant/Search.component.js",["140","141","142","143","144","145","146"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Dash.page.js",["147","148","149","150"],"import Dash from '../applicant/Dash.component'\nimport Navbar from '../applicant/Navbar.component'\nimport { useContext, useEffect } from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\n\nexport default function ProfilePage() {\n  return (\n    <div className=\"ApplicantProfile\">\n        <Navbar />\n        <Dash />\n    </div>\n  );\n}","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/a-pages/Search.page.js",["151","152","153","154"],"import Search from '../applicant/Search.component'\nimport Navbar from '../applicant/Navbar.component'\nimport { useContext, useEffect } from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\n\nexport default function ProfilePage() {\n  return (\n    <div className=\"ApplicantProfile\">\n        <Navbar />\n        <Search />\n    </div>\n  );\n}","/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Dash.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Dash.component.js",["155","156","157","158","159","160","161"],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/r-pages/Emp.page.js",[],"/home/hrishi/GitHub/MERN-Job-Portal/frontend/src/components/recruiter/Emp.component.js",["162","163","164","165","166","167","168"],"import {useState, useContext, useEffect} from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\"\nimport Axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Dropdown } from 'react-bootstrap'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">\n        Work-Way\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 40),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n export default  function Profile() {\n  const classes = useStyles();\n  const [users, setUsers] = useState()\n  const [list, setList] = useState([])\n  const [soType, setSoType] = useState('Ascending')\n  const [sType, setSType] = useState('Name')\n  const [rating, setRating] = useState(3)\n  const [open, setOpen] = useState(false);\n  const [citem, setCitem] = useState()\n\n  const [jobs, setJobs] = useState([])\n  const {userData, setUserData } = useContext(UserContext);\n  const [dataYet, setDataYet] = useState(false)\n  const [open2, setOpen2] = useState(false)\n  const handleClose2 = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen2(false);\n  };\n\n  const sendData = (async () => {\n    if(Number(rating)<0 || Number(rating)>5){\n      setOpen2(true)\n    }\n    else{\n    let token = await localStorage.getItem(\"auth-token\")\n    let tempApplicant = citem.job?.applicants?.filter(ap => ap.email === citem.emp.email)\n    tempApplicant=tempApplicant[0]\n    tempApplicant.rated = true\n    console.log(tempApplicant)\n    let applicants = citem.job.applicants.filter(ap => ap.email !== citem.emp.email)\n    applicants = [...applicants, tempApplicant]\n    console.log(applicants)\n    let nrating = citem.emp.nrating + 1;\n    let trating = Number(citem.emp.trating) + Number(rating);\n    let email = citem.emp.email\n    let content = {nrating, trating}\n    console.log(\"content\", content, \"applicants\", applicants, \"email\", email)\n    const tokenRes = await Axios.post(\n      \"http://localhost:5000/user/tokenIsValid\", null, { headers: { \"x-auth-token\": token } }\n    );\n    if (tokenRes.data) {\n      await Axios.post(`http://localhost:5000/job/update/${citem.job._id}`, { applicants }, {\n        headers: { \"x-auth-token\": token }\n      });\n      await Axios.post(`http://localhost:5000/user/updater/${citem.emp.email}`, {nrating, trating }, {\n        headers: { \"x-auth-token\": token }\n      });\n      setRating(3)\n      setDataYet(false)\n    }\n  }});\n\n  const sortFunc =  (a, b) => {\n    console.log(\"inside\")\n\n    const rc = (j) => {\n      if (j.nrating===0)\n        return 0;\n      else\n        return (j.trating/j.nrating) \n    }\n\n    if (sType === 'Name'){\n      if (soType==='Ascending'){\n        return (((a.emp.fname+a.emp.lname) > (b.emp.fname+b.emp.lname)) ? (1) : (-1))\n      }else{\n        return (((a.emp.fname+a.emp.lname) < (b.emp.fname+b.emp.lname)) ? (1) : (-1))\n      }\n    }else if (sType ==='Job Title'){\n      if (soType==='Ascending'){\n        console.log(a.job.title > b.job.title)\n        return (((a.job.title > b.job.title)) ? (1) : (-1))\n      }else{\n        console.log(a.job.title < b.job.title)\n        return (((a.job.title < b.job.title)) ? (1) : (-1))\n      }\n    }else if (sType ==='Date of Joining'){\n      if (soType==='Ascending'){\n        return (((a.doj > b.doj)) ? (1) : (-1))\n      }else{\n        return (((a.doj < b.doj)) ? (1) : (-1))\n      }\n    }else{\n      if (soType==='Ascending'){\n        return (rc(a.emp)-rc(b.emp))\n      }else{\n        return (rc(b.emp)-rc(a.emp))\n      }\n    }\n  }\n\n  let foo = list\n  foo.sort(sortFunc)\n  console.log(foo)\n  \n\n  useEffect(() => {\n    const callData = (async () => {\n      let token = await localStorage.getItem(\"auth-token\")\n      const tokenRes = await Axios.post(\n        \"http://localhost:5000/user/tokenIsValid\", null, { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const jobsAll = await Axios.get(\"http://localhost:5000/job/\", {\n          headers: { \"x-auth-token\": token }\n        });\n        const usersAll = await Axios.get(\"http://localhost:5000/user/every\", {\n          headers: { \"x-auth-token\": token }\n        });\n        setJobs(jobsAll.data)\n        setUsers(usersAll.data)\n        setDataYet(true)\n        console.log(\"callData\")\n      }\n  });\n  const makeList = (async () => {\n    let temp = []\n    const jobsFilter=jobs.filter(jb=>jb.remail == userData?.user.email)\n    jobsFilter.map(jb => {\n      const appFilter=jb.applicants.filter(ap=>ap.stage > 1)\n      appFilter.map(ap=>{\n        let cUser = users.filter(u => u.email === ap.email)\n        cUser=cUser[0]\n        let empl = {job: jb, emp: cUser, rated: ap.rated, doj: ap.doa}\n        temp = [...temp, empl]\n      })\n    })\n    console.log(\"makeList\", temp)\n    setList(temp)\n  })\n    \n  if (!dataYet){\n    callData()\n  }else{\n    makeList()\n  }\n    \n    console.log(userData)\n  }, [dataYet])\n\n  return (\n    <Grid container component=\"main\" className={classes.rooot} style={{height:\"100vh\"}}> \n    <Grid container className={classes.image} >\n      <CssBaseline />\n        <Grid item xs={false} sm={1} />\n        <Grid item xs={12} sm={10} md={10} component={Paper} elevation={6} square style={{height: \"100vh\"}}>\n        <div className={classes.paper}>\n          <h1>My Employees</h1>\n        </div>\n        <Grid container spacing={4} >\n            <Grid item xs={12}>\n            <Card>\n                <CardActions style={{ backgroundColor: \"#5a1563\" }}>\n                </CardActions>\n            </Card>\n            <Grid container xs={12} style={{ backgroundColor: \"#5a1563\" }}>\n              <Grid item xs={3}>\n              <Grid container>\n              <Grid item xs={3}/>\n              <Grid item xs={9}>\n              <h5 style={{ color: \"white\", display: \"inline\"}}>Sort by:</h5>\n              <Dropdown>\n                          <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\" size=\"sm\">\n                              <h4 style={{ color: \"black\", display: \"inline\"}}>{sType}</h4>\n                          </Dropdown.Toggle>\n\n                          <Dropdown.Menu>\n                              <Dropdown.Item onClick={()=>{setSType('Name'); }}>&nbsp; Name &nbsp;</Dropdown.Item>\n                              <Dropdown.Item onClick={()=>{setSType('Job Title');}}>&nbsp; Job Title &nbsp;</Dropdown.Item>\n                              <Dropdown.Item onClick={()=>{setSType('Date of Joining');}}>&nbsp; Date of Joining &nbsp;</Dropdown.Item>\n                              <Dropdown.Item onClick={()=>{setSType('Applicant Rating');}}>&nbsp; Employee Rating &nbsp;</Dropdown.Item>\n                          </Dropdown.Menu>\n                </Dropdown>\n              </Grid>\n              </Grid>\n              </Grid>\n              <Grid item xs={1}>\n              <h5 style={{ color: \"white\", display: \"inline\"}}>Sort order:</h5>\n              <Dropdown>\n                          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" size=\"sm\">\n                              <h4 style={{ color: \"white\", display: \"inline\"}}>{soType}</h4>\n                          </Dropdown.Toggle>\n\n                          <Dropdown.Menu>\n                              <Dropdown.Item onClick={()=>{setSoType('Ascending');}}>&nbsp; Ascending &nbsp;</Dropdown.Item>\n                              <Dropdown.Item onClick={()=>{setSoType('Descending');}}>&nbsp; Descending &nbsp;</Dropdown.Item>\n                          </Dropdown.Menu>\n                  </Dropdown>\n                  \n              </Grid>\n            </Grid>\n            <Card>\n                <CardActions style={{ backgroundColor: \"#5a1563\" }}>\n                </CardActions>\n            </Card>\n            </Grid>\n            <Grid item xs={12}>\n            <Grid container spacing={4}>\n              {foo?.map(item => {\n                const handleClickOpen = () => {\n                    setCitem(item);\n                    setOpen(true);\n                };\n                const handleCloseAndSubmit = async () => {\n                    await sendData();\n                    setOpen(false);\n                };\n                const handleClose = () => {\n                    setOpen(false);\n                    setRating(3);\n                };\n                let value = 0\n                if (item.emp.nrating) value=(item.emp.trating/item.emp.nrating)\n                return (\n                  <Grid item xs={6} key={JSON.stringify(item)}>\n                  <Card>\n                    <CardContent>\n                    \n                    <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                    <h4>{item.emp.fname} {item.emp.lname}</h4>\n                    </Grid>\n                    <Grid item xs={6}>\n                            Rating : {value} ★\n                    </Grid>\n                    <Grid item xs={6}>\n                      Job Title: {item?.job?.title}\n                    </Grid>\n                     <Grid item xs={6}>\n                        Job Type: {item.job.jtype}\n                     </Grid>\n                     <Grid item xs={6}>\n                        Salary: $ {item?.job?.salary}\n                     </Grid>\n                     <Grid item xs={6}>\n                        Skills : |&nbsp;{item.emp?.skills?.join(\" | \" )} |\n                     </Grid>\n                     <Grid item xs={12}>\n                        Date of Joining : {new Date(item.doj).toDateString()}\n                     </Grid>\n                    </Grid>\n                    </CardContent>\n                    <CardActions>\n                    {\n                      (item.rated===false) ? \n                      (\n                        <Button\n                        onClick={() => handleClickOpen()}\n                        fullWidth\n                        variant=\"contained\"\n                        className={classes.submit}\n                        color=\"primary\"\n                        >\n                          <span style={{color: \"white\"}}> Rate Job</span>\n                        </Button>\n                      ) : (<></>)\n                    }\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">{citem?.emp.fname} {citem?.emp.lname}</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                          <h6>Rate your job!</h6>\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            type=\"number\"\n                            label=\"Rating (Out of 5 ★)\"\n                            fullWidth\n                            value={rating}\n                            onChange={(e) => setRating(e.target.value)}\n                        />\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleCloseAndSubmit} color=\"primary\">\n                            Submit\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                    </CardActions>\n                  </Card>\n                  </Grid>\n                )\n              })}\n            </Grid>\n            </Grid>\n            </Grid>\n        <Box mt={5}>\n              <Copyright />\n          </Box>\n        </Grid>\n        <Grid item xs={false} sm={1} md={7}/>\n    </Grid>\n    <Snackbar open={open2} autoHideDuration={6000} onClose={handleClose2}>\n        <Alert onClose={handleClose2} severity=\"error\">\n          Please Check Values Entered!\n        </Alert>\n      </Snackbar>\n    </Grid> \n  );\n}",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":36,"column":34,"nodeType":"175","endLine":39,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":74,"column":10,"nodeType":"178","messageId":"179","endLine":74,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":82,"column":10,"nodeType":"178","messageId":"179","endLine":82,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":32,"column":17,"nodeType":"182","endLine":36,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":32,"column":17,"nodeType":"182","endLine":36,"endColumn":20},{"ruleId":"176","severity":1,"message":"183","line":97,"column":20,"nodeType":"178","messageId":"179","endLine":97,"endColumn":31},{"ruleId":"184","severity":1,"message":"185","line":219,"column":31,"nodeType":"186","messageId":"187","endLine":219,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":275,"column":36,"nodeType":"186","messageId":"187","endLine":275,"endColumn":38},{"ruleId":"184","severity":1,"message":"185","line":279,"column":129,"nodeType":"186","messageId":"187","endLine":279,"endColumn":131},{"ruleId":"176","severity":1,"message":"183","line":82,"column":20,"nodeType":"178","messageId":"179","endLine":82,"endColumn":31},{"ruleId":"173","severity":1,"message":"188","line":101,"column":5,"nodeType":"189","endLine":101,"endColumn":7,"suggestions":"190"},{"ruleId":"176","severity":1,"message":"177","line":97,"column":10,"nodeType":"178","messageId":"179","endLine":97,"endColumn":18},{"ruleId":"176","severity":1,"message":"183","line":97,"column":20,"nodeType":"178","messageId":"179","endLine":97,"endColumn":31},{"ruleId":"176","severity":1,"message":"191","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},{"ruleId":"176","severity":1,"message":"192","line":3,"column":22,"nodeType":"178","messageId":"179","endLine":3,"endColumn":31},{"ruleId":"176","severity":1,"message":"193","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":19},{"ruleId":"176","severity":1,"message":"194","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"176","severity":1,"message":"183","line":83,"column":20,"nodeType":"178","messageId":"179","endLine":83,"endColumn":31},{"ruleId":"173","severity":1,"message":"188","line":146,"column":6,"nodeType":"189","endLine":146,"endColumn":8,"suggestions":"195"},{"ruleId":"180","severity":1,"message":"181","line":207,"column":27,"nodeType":"182","endLine":211,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":215,"column":27,"nodeType":"182","endLine":219,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":131,"column":10,"nodeType":"186","messageId":"187","endLine":131,"endColumn":12},{"ruleId":"184","severity":1,"message":"185","line":134,"column":13,"nodeType":"186","messageId":"187","endLine":134,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":137,"column":14,"nodeType":"186","messageId":"187","endLine":137,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":140,"column":14,"nodeType":"186","messageId":"187","endLine":140,"endColumn":16},{"ruleId":"173","severity":1,"message":"188","line":205,"column":6,"nodeType":"189","endLine":205,"endColumn":8,"suggestions":"196"},{"ruleId":"184","severity":1,"message":"185","line":214,"column":28,"nodeType":"186","messageId":"187","endLine":214,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":440,"column":63,"nodeType":"186","messageId":"187","endLine":440,"endColumn":65},{"ruleId":"176","severity":1,"message":"191","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},{"ruleId":"176","severity":1,"message":"192","line":3,"column":22,"nodeType":"178","messageId":"179","endLine":3,"endColumn":31},{"ruleId":"176","severity":1,"message":"193","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":19},{"ruleId":"176","severity":1,"message":"194","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"176","severity":1,"message":"191","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},{"ruleId":"176","severity":1,"message":"192","line":3,"column":22,"nodeType":"178","messageId":"179","endLine":3,"endColumn":31},{"ruleId":"176","severity":1,"message":"193","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":19},{"ruleId":"176","severity":1,"message":"194","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"176","severity":1,"message":"183","line":82,"column":21,"nodeType":"178","messageId":"179","endLine":82,"endColumn":32},{"ruleId":"173","severity":1,"message":"188","line":240,"column":6,"nodeType":"189","endLine":240,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":253,"column":15,"nodeType":"200","messageId":"201","endLine":282,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":374,"column":31,"nodeType":"182","endLine":374,"endColumn":61},{"ruleId":"184","severity":1,"message":"185","line":383,"column":73,"nodeType":"186","messageId":"187","endLine":383,"endColumn":75},{"ruleId":"184","severity":1,"message":"185","line":429,"column":62,"nodeType":"186","messageId":"187","endLine":429,"endColumn":64},{"ruleId":"184","severity":1,"message":"202","line":458,"column":53,"nodeType":"186","messageId":"187","endLine":458,"endColumn":55},{"ruleId":"176","severity":1,"message":"194","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},{"ruleId":"176","severity":1,"message":"203","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":14},{"ruleId":"176","severity":1,"message":"183","line":88,"column":20,"nodeType":"178","messageId":"179","endLine":88,"endColumn":31},{"ruleId":"184","severity":1,"message":"202","line":196,"column":48,"nodeType":"186","messageId":"187","endLine":196,"endColumn":50},{"ruleId":"204","severity":1,"message":"205","line":197,"column":23,"nodeType":"206","messageId":"207","endLine":197,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":199,"column":23,"nodeType":"206","messageId":"207","endLine":199,"endColumn":25},{"ruleId":"173","severity":1,"message":"208","line":217,"column":6,"nodeType":"189","endLine":217,"endColumn":15,"suggestions":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"react-hooks/exhaustive-deps","Assignments to the 'userData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setUserData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'UserContext' is defined but never used.","'useHistory' is defined but never used.",["213"],["214"],["215"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Expected '===' and instead saw '=='.","'Avatar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'jobs', 'userData', and 'users'. Either include them or remove the dependency array.",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"217","fix":"219"},{"desc":"217","fix":"220"},{"desc":"217","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [userData]",{"range":"224","text":"225"},{"range":"226","text":"225"},{"range":"227","text":"225"},{"range":"228","text":"225"},"Update the dependencies array to be: [dataYet, jobs, userData, users]",{"range":"229","text":"230"},[3139,3141],"[userData]",[4775,4777],[6288,6290],[8388,8390],[6943,6952],"[dataYet, jobs, userData, users]"]